{"version":3,"sources":["./src/app/components/organationalstructure/organationalstructure.component.ts","./src/app/components/organationalstructure/organationalstructure.component.html","./src/app/util/constant.ts","./src/environments/environment.ts","./src/app/services/bunissesArea.service.ts","./src/app/components/business-area/business-area.component.ts","./src/app/components/business-area/business-area.component.html","./src/app/components/user/registration/registration.component.ts","./src/app/components/user/registration/registration.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/market-area/market-area.component.ts","./src/app/components/market-area/market-area.component.html","./src/app/helpers/ValidatorField.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/titulo/titulo.component.html","./src/app/shared/titulo/titulo.component.ts","./src/app/components/technologicalarea/technologicalarea.component.ts","./src/app/components/technologicalarea/technologicalarea.component.html","./src/app/helpers/DateFormat.pipe.ts","./src/app/app.module.ts","./src/app/components/business-area/business-area-detalhes/business-area-detalhes.component.ts","./src/app/components/business-area/business-area-detalhes/business-area-detalhes.component.html","./src/app/components/business-area/business-area-lista/business-area-lista.component.html","./src/app/components/business-area/business-area-lista/business-area-lista.component.ts","./src/app/components/user/login/login.component.ts","./src/app/components/user/login/login.component.html","./src/app/shared/Nav/Nav.component.html","./src/app/shared/Nav/Nav.component.ts","./src/app/components/operitingunits/operitingunits.component.ts","./src/app/components/operitingunits/operitingunits.component.html","./src/app/components/user/perfil/perfil.component.ts","./src/app/components/user/perfil/perfil.component.html","./src/app/app-routing.module.ts","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-organationalstructure',\n  templateUrl: './organationalstructure.component.html',\n  styleUrls: ['./organationalstructure.component.scss']\n})\nexport class OrganationalstructureComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"'Estrutura Organizacional'\"></app-titulo>\r\n","export class Constant {\n  static readonly DATE_FMT = 'YYYY';\n  static readonly DATE_TIME_FMT = `${Constant.DATE_FMT} hh:mm`;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BusinessArea } from '../model/BusinessArea';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BunissesAreaService {\n\n  baseUrl = 'https://localhost:5001/api/BusinessAreas'\n\nconstructor(private http: HttpClient) { }\n\npublic getBunissesArea(): Observable<BusinessArea[]> {\n  return this.http.get<BusinessArea[]>(this.baseUrl);\n}\n\npublic getBunissesAreaBySigla(sigla: string): Observable<BusinessArea[]> {\n  return this.http.get<BusinessArea[]>(`${this.baseUrl}/${sigla}/sigla`);\n}\n\npublic getBunissesAreaById(id: number): Observable<BusinessArea> {\n  return this.http.get<BusinessArea>(`${this.baseUrl}/${id}`);\n}\n\npublic postBunisses(businessArea: BusinessArea): Observable<BusinessArea> {\n  return this.http.post<BusinessArea>(this.baseUrl, businessArea);\n}\n\npublic putBunisses(id: number, businessArea: BusinessArea): Observable<BusinessArea> {\n  return this.http.put<BusinessArea>(`${this.baseUrl}/${id}`, businessArea);\n}\n\npublic deleteBunisses(id: number): Observable<any> {\n  return this.http.delete<any>(`${this.baseUrl}/${id}`);\n}\n\n}\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { BusinessArea } from 'src/app/model/BusinessArea';\nimport { BunissesAreaService } from 'src/app/services/bunissesArea.service';\n\n\n\n@Component({\n  selector: 'app-business-area',\n  templateUrl: './business-area.component.html',\n  styleUrls: ['./business-area.component.scss']\n})\nexport class BusinessAreaComponent implements OnInit {\n ngOnInit(): void {\n }\n\n\n}\n","<app-titulo [titulo]=\"'UnidadeDeNegocio'\" [iconClass]=\"'fa fa-cog'\"\r\n[subtitulo]=\"'Verifique e cadastre a area de negocio'\"\r\n[botaoLista]=\"true\"></app-titulo>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControlOptions, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorField } from '@app/helpers/ValidatorField';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n  form!: FormGroup;\n\n  get f(): any{\n    return this.form.controls;\n  }\n\n  constructor(public fb: FormBuilder) { }\n\n  ngOnInit(): void {\n  this.Validation();\n  }\n\n  public Validation(): void{\n    const formOptions: AbstractControlOptions ={\n      validators: ValidatorField.MustMatch('senha', 'confirmeSenha')\n    };\n\n    this.form = this.fb.group({\n      primeiroNome: ['', Validators.required],\n      ultimoNome: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      userName: ['', Validators.required],\n      senha: ['', [Validators.required, Validators.minLength(6)]],\n      confirmeSenha: ['', Validators.required],\n    }, formOptions);\n  }\n\n}\n","<div class=\"row mt-4\" >\n\n  <div class=\"col-md-6 d-none d-md-block\" style=\"height: 450px;\">\n    <div class=\"text-center col-md-12 my-auto side-heder\">\n      <h1>Cadastro de Usuário</h1>\n      <img src=\"../../../../assets/registerImage.png\" class=\"my-4\" alt=\"\" width=\"400px\">\n    </div>\n  </div>\n\n  <div class=\"col-md-6\">\n\n    <form class=\"p-1\" [formGroup]=\"form\">\n      <div class=\"pb-2 d-block d-md-none\">\n        <h3 class=\"border-bottom\">Cadastro de Usuário</h3>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-sm-6\">\n          <label>Primeiro Nome</label>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"{'is-invalid': f.primeiroNome.errors && f.primeiroNome.touched }\"\n          formControlName=\"primeiroNome\"\n          placeholder=\"ex: Jorge\" />\n          <div class=\"invalid-feedback\">\n            O primeiro nome é obrigatório o preenchimento\n          </div>\n        </div>\n\n        <div class=\"form-group col-sm-6\">\n          <label>Último nome</label>\n          <input type=\"text\" class=\"form-control\"  [ngClass]=\"{'is-invalid': f.ultimoNome.errors && f.ultimoNome.touched }\"\n          formControlName=\"ultimoNome\"\n          placeholder=\"Nascimento\" />\n          <div class=\"invalid-feedback\">\n            O último nome é obrigatório o preenchimento\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"\">Email Coporativo:</label>\n        <input class=\"form-control\" type=\"text\" [ngClass]=\"{'is-invalid': f.email.errors && f.email.touched }\"\n        formControlName=\"email\"\n        placeholder=\"colaborador(a)@fieb.org.br\" />\n        <div *ngIf=\"f.email.errors?.required && f.email.errors.touched\" class=\"invalid-feedback\">\n          O e-mail é obrigatório o preenchimento\n        </div>\n        <div *ngIf=\"f.email.errors?.email && f.email.touched\">\n          Deve ser o e-mail Coporativo.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"\">Usuario:</label>\n        <input class=\"form-control\" type=\"text\" [ngClass]=\"{'is-invalid': f.userName.errors && f.userName.touched }\"\n        formControlName=\"userName\"\n        placeholder=\"jorge.nascimento\" />\n        <div class=\"invalid-feedback\">\n          O nome do usuário é obrigatório o preenchimento\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-sm-6\">\n          <label for=\"\">Senha:</label>\n          <input class=\"form-control\" type=\"password\" [ngClass]=\"{'is-invalid': f.senha.errors && f.senha.touched }\"\n          formControlName=\"senha\"\n          placeholder=\"Digite uma Senha\" />\n          <div *ngIf=\"f.senha.erros?.required && f.senha.touched\" class=\"invalid-feedback\">\n            A senhaé obrigatória o preenchimento\n          </div>\n          <div *ngIf=\"f.senha.erros?.minLength && f.senha.touched\" class=\"invalid-feedback\">\n            A senha deve conter ao menos 6 caracteres.\n          </div>\n        </div>\n        <div class=\"form-group col-sm-6\">\n          <label for=\"\">Confirmar Senha:</label>\n          <input class=\"form-control\" type=\"password\" [ngClass]=\"{'is-invalid': f.confirmeSenha.errors && f.confirmeSenha.touched }\"\n          formControlName=\"confirmeSenha\"\n          placeholder=\"Confirme a Senha\" />\n          <div *ngIfs=\"f.confirmeSenha.erros?.mustMatch\" class=\"invalid-feedback\">\n            As senhas não confere.\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row p-1 mb-3\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n          <label class=\"custom-control-label\">Eu concordo com os <a href=\"#\">Termos de Uso</a>.</label>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-12\">\n          <button class=\"btn btn-lg btn-success btn-block px-5\">\n            Registar\n          </button>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-12\">\n          <a class=\"btn btn-link btn-block\" routerLink=\"/user/login\">\n            Já sou Cadastrado\n          </a>\n        </div>\n      </div>\n    </form>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"'Dasharboard'\"></app-titulo>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-market-area',\n  templateUrl: './market-area.component.html',\n  styleUrls: ['./market-area.component.scss']\n})\nexport class MarketAreaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-titulo [titulo]=\"'Área de Mercado'\"></app-titulo>\n","import { AbstractControl, FormGroup } from '@angular/forms';\n\nexport class ValidatorField {\n\n  static MustMatch(controlName: string, matchingControlName: string): any{\n    return(group: AbstractControl) => {\n      const FormGroup = group as FormGroup;\n      const control = FormGroup.controls[controlName];\n      const matchingControl = FormGroup.controls[matchingControlName];\n\n      if(matchingControl.errors && !matchingControl.errors.mustMatch){\n        return null;\n      }\n\n      if(control.value !== matchingControl.value){\n        matchingControl.setErrors({mustMatch: true});\n      } else{\n        matchingControl.setErrors(null);\n      }\n    };\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'EstruturaOrganizacional-App';\n}\n","<app-Nav></app-Nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n<ngx-spinner bdColor= \"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#fff\" type=\"ball-scale-multiple\">\n  <p style=\"font-size: px; color: white\">Carregando...</p>\n</ngx-spinner>\n","\n<div class=\"d-flex p-3 my-3 text-white bg-secondary rounded shadow-sm\">\n  <div class=\"d-flex align-items-center mr-auto\">\n    <i class=\"{{iconClass}} mr-3\"></i>\n  <div class=\"lh-100\">\n      <h2 class=\"mb-0\">{{titulo}}</h2>\n      <small>{{subtitulo}}</small>\n    </div>\n  </div>\n\n  <div class=\"p-3\" *ngIf=\"botaoLista\">\n    <button class=\"btn btn-outline-light\" (click)=\"listar()\">\n      Listar {{titulo}}\n      </button>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-titulo',\n  templateUrl: './titulo.component.html',\n  styleUrls: ['./titulo.component.scss']\n})\nexport class TituloComponent implements OnInit {\n   @Input() titulo = '';\n   @Input() iconClass = 'fa-fa-user';\n   @Input() subtitulo = 'Desde de 2022';\n   @Input() botaoLista = false;\n\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  listar():void{\n    this.titulo.trim();\n    this.router.navigate([`/${this.titulo.toLocaleLowerCase()}/lista`]);\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-technologicalarea',\n  templateUrl: './technologicalarea.component.html',\n  styleUrls: ['./technologicalarea.component.scss']\n})\nexport class TechnologicalareaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"'Área de Tecnólogica'\"></app-titulo>\r\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Constant } from '../util/constant';\n\n@Pipe({\n  name: 'DateFormat'\n})\nexport class DateFormatPipe extends DatePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return super.transform(value, Constant.DATE_FMT);\n  }\n\n}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './shared/Nav/Nav.component';\n\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { BunissesAreaService } from './services/bunissesArea.service';\nimport { MarketAreaComponent } from './components/market-area/market-area.component';\n\nimport { DateFormatPipe } from './helpers/DateFormat.pipe';\n\nimport { TechnologicalareaComponent } from './components/technologicalarea/technologicalarea.component';\nimport { OperitingunitsComponent } from './components/operitingunits/operitingunits.component';\nimport { OrganationalstructureComponent } from './components/organationalstructure/organationalstructure.component';\nimport { BusinessAreaComponent } from './components/business-area/business-area.component';\nimport { TituloComponent } from './shared/titulo/titulo.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { PerfilComponent } from './components/user/perfil/perfil.component';\nimport { BusinessAreaDetalhesComponent } from './components/business-area/business-area-detalhes/business-area-detalhes.component';\nimport { BusinessAreaListaComponent } from './components/business-area/business-area-lista/business-area-lista.component';\nimport { UserComponent } from './components/user/user.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegistrationComponent } from './components/user/registration/registration.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BusinessAreaComponent,\n    MarketAreaComponent,\n    OperitingunitsComponent,\n    OrganationalstructureComponent,\n    TechnologicalareaComponent,\n    NavComponent,\n    TituloComponent,\n    DashboardComponent,\n    PerfilComponent,\n    DateFormatPipe,\n    BusinessAreaDetalhesComponent,\n    BusinessAreaListaComponent,\n    UserComponent,\n    LoginComponent,\n    RegistrationComponent\n   ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    CollapseModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    TooltipModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    ToastrModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgxSpinnerModule\n  ],\n  providers: [\n    BunissesAreaService\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule { }\n","import { error } from '@angular/compiler/src/util';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { BusinessArea } from '@app/model/BusinessArea';\nimport { BunissesAreaService } from '@app/services/bunissesArea.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-business-area-detalhes',\n  templateUrl: './business-area-detalhes.component.html',\n  styleUrls: ['./business-area-detalhes.component.scss']\n})\nexport class BusinessAreaDetalhesComponent implements OnInit {\n\n  business = {} as BusinessArea;\n  public form: FormGroup;\n  estadoSalvar = 'post';\n\n  get f(): any{\n    return this.form.controls;\n  }\n  constructor(private fb: FormBuilder,\n              private router: ActivatedRoute,\n              private businessService: BunissesAreaService,\n              private spinner: NgxSpinnerService,\n              private toastr: ToastrService) { }\n\n\n  public carregarUnidades(): void {\n      const businessIdParam = this.router.snapshot.paramMap.get('id');\n\n      if (businessIdParam != null ){\n\n        this.spinner.show();\n        this.estadoSalvar = 'put';\n\n        this.businessService.getBunissesAreaById(+businessIdParam).subscribe({\n          next: (business: BusinessArea)  =>\n          {\n            this.business = {...business};\n            this.form.patchValue(this.business);\n          },\n          error: any => {\n            this.spinner.hide();\n            this.toastr.error('Erro ao tentar carregar unidade', 'Erro!');\n            console.error(Error);\n          },\n          complete: () => this.spinner.hide(),\n        });\n      }\n  }\n\n  ngOnInit(): void {\n      this.validation();\n      this.carregarUnidades();\n  }\n\n  public validation() : void{\n      this.form = this.fb.group({\n        descricao: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(55)]],\n        sigla: ['', [Validators.required, Validators.maxLength(10), Validators.minLength(3)]],\n        codEMS: ['', [Validators.required, Validators.maxLength(15)]],\n      });\n    }\n\n    public resetForm(): void{\n      this.form.reset();\n    }\n\n    public cssValidador(campoForm: FormControl): any {\n      return {'is-invalid': campoForm.errors && campoForm.touched};\n    }\n\n    public salvarAlteracao(): void{\n\n      this.spinner.show();\n\n      if (this.form.valid){\n\n        if (this.estadoSalvar === 'post'){\n\n          this.business.IsDeleted = false;\n\n          this.business = {...this.form.value};\n          this.businessService.postBunisses(this.business).subscribe(\n            () => this.toastr.success('Unidade de negócio salvo com Sucesso!', 'Sucesso'),\n            (error: any) => {\n              console.log(error);\n              this.spinner.hide();\n              this.toastr.error('Erro ao salvar unidade de negócio', 'Erro!');\n            },\n            () => this.spinner.hide()\n          );\n        }\n        else\n        {\n          this.business = {id: this.business.id, ...this.form.value};\n\n          this.businessService.putBunisses(this.business.id, this.business).subscribe(\n            () => this.toastr.success('Unidade de negócio salvo com Sucesso!', 'Sucesso'),\n            (error: any) => {\n              console.log(error);\n              this.spinner.hide();\n              this.toastr.error('Erro ao salvar unidade de negócio', 'Erro!');\n            },\n            () => this.spinner.hide()\n          );\n        }\n      }\n    }\n  }\n","<div class=\"card rounded shadow-sm\" [formGroup]=\"form\">\n  <form [formGroup]=\"form\">\n    <div class=\"p-3\">\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-12\">\n          <label>Descrição</label>\n\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidador(f.descricao)\"\n          formControlName=\"descricao\" placeholder=\"Informe a unidade de negocio\">\n\n          <div *ngIf=\"f.descricao.errors?.required\" class=\"invalid-feedback\">\n            Descrição é obrigatória o preenchimento!\n          </div>\n\n          <div *ngIf=\"f.descricao.errors?.minlength\" class=\"invalid-feedback\">\n            Descrição minima é de 4 caracteres!\n          </div>\n\n          <div *ngIf=\"f.descricao.errors?.maxlength\" class=\"invalid-feedback\">\n            Descrição maxima é de 50 caracteres!\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-8\">\n          <label>Sigla</label>\n          <input type=\"text\" class=\"form-control\"  [ngClass]=\"cssValidador(f.sigla)\"\n          formControlName=\"sigla\" placeholder=\"\">\n          <div  *ngIf=\"f.sigla.errors?.required\" class=\"invalid-feedback\">\n            Sigla é obrigatória o preenchimento!\n          </div>\n          <div  *ngIf=\"f.sigla.errors?.maxlength\" class=\"invalid-feedback\">\n            Tamanho maximo é de 10 caracteres.\n          </div>\n          <div *ngIf=\"f.sigla.errors?.minlength\" class=\"invalid-feedback\">\n            Descrição minima é de 3 caracteres!\n          </div>\n        </div>\n        <div class=\"form-group col-md-4\">\n          <label>Código EMS</label>\n          <input type=\"text\" class=\"form-control\"  [ngClass]=\"cssValidador(f.codEMS)\"\n          formControlName=\"codEMS\" placeholder=\"\">\n          <div  *ngIf=\"f.codEMS.errors?.required\" class=\"invalid-feedback\">\n            Código é obrigatória o preenchimento!\n          </div>\n          <div  *ngIf=\"f.codEMS.errors?.maxlength\" class=\"invalid-feedback\">\n            Tamanho maximo é de 10 caracteres.\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"card-footer\">\n      <div class=\"d-flex\">\n        <button class=\"btn btn-outline-secondary mr-auto border\" (click)=\"resetForm()\">\n          Cancelar Alteração\n        </button>\n        <button class=\"btn btn-success\" [disabled]=\"!form.valid\" (click)=\"salvarAlteracao()\">\n          <!-- <span class=\"spinner-border spinner-border-sm mr-1\"></span> -->\n          Salvar unidade\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","\n<div class=\"card rounded shadow-sm p-3\">\n\n  <div class=\"input-group flex-nowrap\" style=\"margin-bottom: 2%\">\n    <span class=\"input-group-text\" id=\"addon-wrapping\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\n        <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n      </svg>\n    </span>\n    <input [(ngModel)]=\"filtroLista\" type=\"text\" class=\"form-control\" placeholder=\"Pesquise area de negocio\" aria-label=\"Username\" aria-describedby=\"addon-wrapping\" >\n    <a class=\"d-flex btn btn-outline-primary\" routerLink=\"/unidadedenegocio/detalhes\">\n      <i class=\"fa fa-plus-circle my-1\"></i>\n      <b class=\"ml-1 d-none d-sm-block\">Novo</b>\n    </a>\n  </div>\n  <table class=\"table table-striped table-hover\">\n    <thead class=\" thead-dark\">\n      <tr>\n        <th style=\"text-align: center; vertical-align:middle !important\">#</th>\n        <th style=\"text-align: center; vertical-align:middle !important\">Descrição</th>\n        <th style=\"text-align: center; vertical-align:middle !important\">Sigla do Negócio</th>\n        <th style=\"text-align: center; vertical-align:middle !important\">Código EMS</th>\n        <th style=\"text-align: center; vertical-align:middle !important\">Opção</th>\n      </tr>\n    </thead>\n    <tbody *ngIf=\"businessareas && businessareas.length\">\n      <tr *ngFor=\"let businessarea of businessareasfiltrados\" (click) = \"detalheNegocio(businessarea.id)\" style=\"cursor: pointer;\">\n        <td style=\"text-align: center; vertical-align:middle !important\">{{businessarea.id}}</td>\n        <td style=\"text-align: center; vertical-align:middle !important\">{{businessarea.descricao}}</td>\n        <td style=\"text-align: center; vertical-align:middle !important\">{{businessarea.sigla}}</td>\n        <td style=\"text-align: center; vertical-align:middle !important\">{{businessarea.codEMS}}</td>\n        <td style=\"text-align: center; vertical-align:middle !important\">\n          <button type=\"button\" class=\"btn btn-danger btn-sm\" tooltip=\"Excluir\" (click)=\"openModal($event, template, businessarea.id)\">\n            <i class=\"fa fa-trash\"></i>\n          </button>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot *ngIf=\"!businessareas.length\">\n      <tr>\n        <td colspan=\"6\" class=\"text-center\">\n          <h4 >Nenhuma Unidade de Negócio encontrada</h4>\n        </td>\n      </tr>\n    </tfoot>\n  </table>\n\n</div>\n\n<! --{{Unidade de negocio - JSON}}  -->\n\n<ng-template #template>\n  <div class=\"modal-body text-center\">\n    <p>Tem certeza que deseja deletar este negocio?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\" >Sim</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"decline()\" >Não</button>\n  </div>\n</ng-template>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { BusinessArea } from 'src/app/model/BusinessArea';\nimport { BunissesAreaService } from 'src/app/services/bunissesArea.service';\n\n@Component({\n  selector: 'app-business-area-lista',\n  templateUrl: './business-area-lista.component.html',\n  styleUrls: ['./business-area-lista.component.scss']\n})\nexport class BusinessAreaListaComponent implements OnInit {\n\n  modalRef = {} as BsModalRef;\n  public businessareas: BusinessArea[] = [];\n  public businessareasfiltrados: BusinessArea[] = [];\n  private filtroListado = '';\n  public businessareasId = 0;\n  public businessareaIsDeleted = false;\n\n  public get filtroLista() {\n    return this.filtroListado;\n  }\n\n  public set filtroLista(value: string){\n    this.filtroListado = value;\n    this.businessareasfiltrados = this.filtroLista ? this.filtrarUnidades(this.filtroLista) : this.businessareas;\n  }\n\n  public filtrarUnidades(filtrarPor: string): BusinessArea[]{\n    filtrarPor = filtrarPor.toLocaleLowerCase();\n    return this.businessareas.filter(\n      (businessarea: any) => businessarea.sigla.toLocaleLowerCase().indexOf(filtrarPor) !== -1 ||\n      businessarea.codReduzido.toLocaleLowerCase().indexOf(filtrarPor) !== -1\n    );\n  }\n\n  constructor(\n    private bunissesAreaservice: BunissesAreaService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router: Router\n    ) { }\n\n  public ngOnInit(): void {\n    this.getCarregarBusinessArea();\n\n    this.spinner.show();\n\n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.spinner.hide();\n    }, 5000);\n  }\n\n  public getCarregarBusinessArea(): void {\n    this.bunissesAreaservice.getBunissesArea().subscribe(\n      (businessAreasResp: BusinessArea[]) => {\n        this.businessareas = businessAreasResp;\n        this.businessareasfiltrados = this.businessareas;\n      },\n      error => console.log(error)\n    );\n  }\n\n  openModal(event: any, template: TemplateRef<any>, businessareasId: number, businessareaIsDeleted: boolean): void {\n    event.stopPropagation();\n    this.businessareasId = businessareasId;\n    this.businessareaIsDeleted = businessareaIsDeleted;\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\n  }\n\n\n\n  confirm(): void {\n    //Modificar a parte de confirmação do delete para que ele seja === e não diferente!\n    this.modalRef.hide();\n    this.spinner.show();\n    this.bunissesAreaservice.deleteBunisses(this.businessareasId).subscribe(\n      (result: string) => {\n        if (result = 'Ok'){\n          console.log(result);\n          this.toastr.success('A unidade operacional foi deletada com sucesso', 'Deletado');\n          this.spinner.hide();\n          this.getCarregarBusinessArea();\n        }\n      },\n      (error: any) => {\n\n        this.toastr.error('Erro ao tentar deletar a unidade operacional');\n        this.spinner.hide();\n        console.error(error);\n      },\n      () => this.spinner.hide(),\n    );\n\n  }\n\n  decline(): void {\n    this.modalRef.hide();\n  }\n\n  detalheNegocio(id: number): void{\n    this.router.navigate([`unidadedenegocio/detalhe/${id}`]);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex align-items-center vh-100\">\n\n\t<div class=\"mx-auto text-center shadow-sm bg-white rounded p-5 my-5\">\n\n\t\t<form class=\"form-signin\">\n\t\t\t<i class=\"fa fa-users mb-2\"></i>\n\t\t\t<h1 class=\"h3 mb-3 font-weight-normal\">Entrar com</h1>\n\t\t\t<label for=\"username\" class=\"sr-only\">Usuário</label>\n\t\t\t<input type=\"email\" id=\"username\" class=\"form-control\" placeholder=\"Usuário\" name=\"username\" required>\n\t\t\t<label for=\"password\" class=\"sr-only\">Password</label>\n\t\t\t<input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Senha\" name=\"password\" required>\n\t\t\t<button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Entrar</button>\n\t\t\t<p class=\"mt-4 mb-2 text-muted\">Não tem login? Cadastre-se abaixo</p>\n\t\t\t<a class=\"btn btn-lg btn-link btn-block\" routerLink=\"/user/registration\">Quero me cadastrar</a>\n\t\t</form>\n\n\t</div>\n\n</div>\n\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-white shadow-sm\" *ngIf=\"showMenu()\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">Dashboard</a>\n    <button class=\"navbar-toggler\" (click)=\"isCollapsed = !isCollapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" [collapse]=\"isCollapsed\" [isAnimated]=\"true\" id=\"navbarNav\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" aria-current=\"page\" routerLink=\"unidadedenegocio/lista\">Area de Négocio</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"areademercado\">Area de Mercado</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"areatecnologica\">Area Tecnológica</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"unidadeoperacional\">Unidade Operacional</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"organizacaoestrutural\">Estrutura Organizacional</a>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item dropdown\" dropdown>\n          <a dropdownToggle class=\"nav-link dropdown-toggle\" style=\"cursor: pointer\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n            Jorge\n          </a>\n          <div *dropdownMenu class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n            <a class=\"dropdown-item\" routerLink=\"user/perfil\">\n              Perfil\n            </a>\n            <div role=\"separator\" class=\"divider\"></div>\n            <a class=\"dropdown-item\" routerLink=\"user/login\">\n              Sair\n            </a>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-Nav',\n  templateUrl: './Nav.component.html',\n  styleUrls: ['./Nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  isCollapsed = true;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  showMenu(): boolean{\n    return this.router.url !== '/user/login';\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-operitingunits',\n  templateUrl: './operitingunits.component.html',\n  styleUrls: ['./operitingunits.component.scss']\n})\nexport class OperitingunitsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"'Unidade Operacional'\"></app-titulo>\r\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControlOptions, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorField } from '@app/helpers/ValidatorField';\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.scss']\n})\nexport class PerfilComponent implements OnInit {\n\n  form!: FormGroup;\n\n  get f(): any{\n    return this.form.controls;\n  }\n\n  constructor(public fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.Validation();\n  }\n\n  public Validation(): void{\n    const formOptions: AbstractControlOptions ={\n      validators: ValidatorField.MustMatch('senha', 'confirmeSenha')\n    };\n\n    this.form = this.fb.group({\n      primeiroNome: ['', Validators.required],\n      ultimoNome: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      userName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      descricao: ['', [Validators.required]],\n      confirmePassword: ['', Validators.required],\n    }, formOptions);\n  }\n\n public resetForm(): void{\n    this.form.reset();\n  }\n\n}\n","<app-titulo [titulo]=\"'Perfil de Usuário'\"></app-titulo>\n\n<div class=\"card rounded shadow-sm\">\n\n  <form [formGroup]=\"form\">\n    <div class=\"row p-3\">\n      <div class=\"col-lg-3 pt-1\">\n        <div class=\"card mb-3\">\n          <div class=\"card-header\"></div>\n          <div class=\"d-flex align-self-center pt-3\">\n            <a>\n              <img\n              src=\"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcRbezqZpEuwGSvitKy3wrwnth5kysKdRqBW54cAszm_wiutku3R\"\n              name=\"aboutme\" width=\"120\" height=\"120\" class=\"rounded-circle\">\n            </a>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"h4 text-center mb-3\">@UserName</div>\n            <div class=\"h7 text-bold pb-1\"><b>Nome:</b> Miracles Lee Cross</div>\n            <div class=\"h7\">\n              Developer of web applications, JavaScript, PHP, Java, Python, Ruby, Java, Node.js,\n              etc.\n            </div>\n          </div>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">\n              <div class=\"row\">\n                <div class=\"col-6 text-center border-right\">\n                  <div class=\"h5\">1342</div>\n                  <div class=\"h6 text-muted\">Eventos Ministrados</div>\n                </div>\n                <div class=\"col-6 text-center\">\n                  <div class=\"h5\">1342</div>\n                  <div class=\"h6 text-muted\">Eventos Participados</div>\n                </div>\n              </div>\n            </li>\n          </ul>\n          <div class=\"card-footer\"></div>\n        </div>\n      </div>\n      <div class=\"col-lg-9\">\n        <div class=\"form-row\">\n          <div class=\"form-group col-12\">\n            <h3 class=\"border-bottom\">Detalhe Perfil</h3>\n          </div>\n          <div class=\"form-group col\">\n            <label>Título</label>\n            <select class=\"form-control\">\n              <option value=\"\"></option>\n              <option value=\"0\">Não Quero</option>\n              <option value=\"Senhorita\">Tecnólogo(a)</option>\n              <option value=\"Senhorita\">Bacharel</option>\n              <option value=\"Senhorita\">Especialista</option>\n              <option value=\"Senhorita\">Pós Graduado(a)</option>\n              <option value=\"Senhorita\">Mestre</option>\n              <option value=\"Senhorita\">Doutor(a)</option>\n              <option value=\"Senhorita\">Pós Doc</option>\n            </select>\n          </div>\n          <div class=\"form-group col-sm-5\">\n            <label>Primeiro Nome</label>\n            <input type=\"text\" class=\"form-control\" [ngClass]=\"{'is-invalid': f.primeiroNome.errors && f.primeiroNome.touched }\"\n            placeholder=\"ex: Jorge\" />\n            <div class=\"invalid-feedback\">\n              O primeiro nome é obrigatório o preenchimento\n            </div>\n          </div>\n          <div class=\"form-group col-sm-5\">\n            <label>Último nome</label>\n            <input type=\"text\" class=\"form-control\" [ngClass]=\"{'is-invalid': f.ultimoNome.errors && f.ultimoNome.touched }\"\n            placeholder=\"Oliveira\"/>\n            <div class=\"invalid-feedback\">\n              Ultimo nome é obrigatório!\n            </div>\n          </div>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-sm-5\">\n            <label>E-mail Corporativo</label>\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': f.email.errors && f.email.touched }\" />\n            <div *ngIf=\"f.email.errors && f.email.touched\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.email.errors.required\">e-mail é obrigatório</div>\n              <div *ngIf=\"f.email.errors.email\">e-mail precisa ser um endereço válido.</div>\n            </div>\n          </div>\n          <div class=\"form-group col-sm-4\">\n            <label>Telefone</label>\n            <input type=\"text\" class=\"form-control\" />\n          </div>\n          <div class=\"form-group col-sm\">\n            <label>Função</label>\n            <select class=\"form-control\">\n              <option value=\"\"></option>\n              <option value=\"Participante\">Gerente</option>\n              <option value=\"Palestrante\">colaborador</option>\n            </select>\n          </div>\n          <form-group class=\"col-12\">\n            <label>Descrição</label>\n            <input type=\"text\" formControlName=\"descricao\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': f.descricao.errors && f.descricao.touched }\" />\n            <div *ngIf=\"f.descricao.errors && f.descricao.touched\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.descricao.errors.required\">Descrição é obrigatório</div>\n            </div>\n          </form-group>\n        </div>\n        <div>\n          <h3 class=\"pt-3 border-bottom\">Mudar Senha</h3>\n          <p>Caso mude de senha, preencha os campos abaixo:</p>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-sm\">\n            <label>Senha</label>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': f.password.errors && f.password.touched }\" />\n            <div *ngIf=\"f.password.errors && f.password.touched\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.password.errors.required\">Senha é obrigatório</div>\n              <div *ngIf=\"f.password.errors.minlength\">Senha precisa ter pelo menos 6 caracteres</div>\n            </div>\n          </div>\n          <div class=\"form-group col-sm\">\n            <label>Confirmar Senha</label>\n            <input type=\"password\" formControlName=\"confirmePassword\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': f.confirmePassword.errors && f.confirmePassword.touched }\" />\n            <div *ngIf=\"f.confirmePassword.errors && f.confirmePassword.touched\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.confirmePassword.errors.required\">\n                Confirmação de senha é Obrigatório\n              </div>\n              <div *ngIf=\"f.confirmePassword.errors.mustMatch\">\n                Repedir a senha é obrigatório.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"card-footer\">\n      <div class=\"d-flex\">\n        <button class=\"btn btn-outline-secondary mr-auto border\" (click)=\"resetForm()\">\n          Cancelar Alteração\n        </button>\n        <button class=\"btn btn-success\">\n          <!--  <span class=\"spinner-border spinner-border-sm mr-1\"></span> -->\n          Salvar Alteração\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { MarketAreaComponent } from './components/market-area/market-area.component';\nimport { OperitingunitsComponent } from './components/operitingunits/operitingunits.component';\nimport { OrganationalstructureComponent } from './components/organationalstructure/organationalstructure.component';\nimport { TechnologicalareaComponent } from './components/technologicalarea/technologicalarea.component';\nimport { PerfilComponent } from './components/user/perfil/perfil.component';\nimport { BusinessAreaComponent } from './components/business-area/business-area.component';\nimport { BusinessAreaDetalhesComponent } from './components/business-area/business-area-detalhes/business-area-detalhes.component';\nimport { BusinessAreaListaComponent } from './components/business-area/business-area-lista/business-area-lista.component';\nimport { UserComponent } from './components/user/user.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegistrationComponent } from './components/user/registration/registration.component';\n\nconst routes: Routes = [\n\n  { path: 'user', component: UserComponent,\n  children: [\n    {path: 'login', component: LoginComponent},\n    {path: 'registration', component: RegistrationComponent},\n  ]\n  },\n  { path: 'user/perfil', component: PerfilComponent},\n  { path: 'unidadedenegocio', redirectTo: 'unidadedenegocio/lista' },\n  {\n    path: 'unidadedenegocio', component: BusinessAreaComponent,\n    children: [\n      {path: 'detalhe/:id', component: BusinessAreaDetalhesComponent},\n      {path: 'detalhes', component: BusinessAreaDetalhesComponent},\n      {path: 'lista', component: BusinessAreaListaComponent},\n    ]\n  },\n  { path: 'areademercado', component: MarketAreaComponent},\n  { path: 'unidadeoperacional', component: OperitingunitsComponent},\n  { path: 'areatecnologica', component: TechnologicalareaComponent},\n  { path: 'organizacaoestrutural', component: OrganationalstructureComponent},\n  { path: 'dasharboard', component: DashboardComponent},\n  { path: '', redirectTo: 'dasharboard', pathMatch: 'full'},\n  { path: '**', redirectTo: 'dasharboard', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n\t<router-outlet></router-outlet>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}