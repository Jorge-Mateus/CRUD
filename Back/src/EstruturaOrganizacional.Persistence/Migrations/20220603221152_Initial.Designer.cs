// <auto-generated />
using EstruturaOrganizacional.Persistence.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EstruturaOrganizacional.Persistence.Migrations
{
    [DbContext(typeof(EstruturaOrganizacionalContext))]
    [Migration("20220603221152_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("EstruturaOrganizacional.Domain.BusinessArea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("codEMS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sigla")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("BUSINESSAREA");
                });

            modelBuilder.Entity("EstruturaOrganizacional.Domain.MarketArea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("MARKETAREA");
                });

            modelBuilder.Entity("EstruturaOrganizacional.Domain.OperatingUnit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("codReduzido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sigla")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("OPERATINGUNIT");
                });

            modelBuilder.Entity("EstruturaOrganizacional.Domain.OrganizationalStructure", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BusinessAreaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MarketAreaID")
                        .HasColumnType("int");

                    b.Property<int>("OperatingUnitsId")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalAreaId")
                        .HasColumnType("int");

                    b.Property<int>("ano")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("BusinessAreaId");

                    b.HasIndex("MarketAreaID");

                    b.HasIndex("OperatingUnitsId");

                    b.HasIndex("TechnologicalAreaId");

                    b.ToTable("ORGANIZATIONALSTRUCTURE");
                });

            modelBuilder.Entity("EstruturaOrganizacional.Domain.TechnologicalArea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unidadeVirtual")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TECHNOLOGICALAREA");
                });

            modelBuilder.Entity("EstruturaOrganizacional.Domain.OrganizationalStructure", b =>
                {
                    b.HasOne("EstruturaOrganizacional.Domain.BusinessArea", "BusinessAreas")
                        .WithMany("Organizacao")
                        .HasForeignKey("BusinessAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstruturaOrganizacional.Domain.MarketArea", "MarketAreas")
                        .WithMany("Organizacao")
                        .HasForeignKey("MarketAreaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstruturaOrganizacional.Domain.OperatingUnit", "OperatingUnits")
                        .WithMany("Organizacao")
                        .HasForeignKey("OperatingUnitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstruturaOrganizacional.Domain.TechnologicalArea", "TchnologicalAreas")
                        .WithMany("Organizacao")
                        .HasForeignKey("TechnologicalAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessAreas");

                    b.Navigation("MarketAreas");

                    b.Navigation("OperatingUnits");

                    b.Navigation("TchnologicalAreas");
                });

            modelBuilder.Entity("EstruturaOrganizacional.Domain.BusinessArea", b =>
                {
                    b.Navigation("Organizacao");
                });

            modelBuilder.Entity("EstruturaOrganizacional.Domain.MarketArea", b =>
                {
                    b.Navigation("Organizacao");
                });

            modelBuilder.Entity("EstruturaOrganizacional.Domain.OperatingUnit", b =>
                {
                    b.Navigation("Organizacao");
                });

            modelBuilder.Entity("EstruturaOrganizacional.Domain.TechnologicalArea", b =>
                {
                    b.Navigation("Organizacao");
                });
#pragma warning restore 612, 618
        }
    }
}
